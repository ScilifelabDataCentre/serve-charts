{{- if .Values.celeryFlower.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    io.kompose.service: {{ .Release.Name }}-celery-flower
    name: {{ .Release.Name }}-celery-flower
  name: {{ .Release.Name }}-celery-flower
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: {{ .Release.Name }}-celery-flower
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.20.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: {{ .Release.Name }}-celery-flower
        name: {{ .Release.Name }}-celery-flower
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
          - sh
          - ./scripts/run_flower.sh
        {{- if .Values.studio.securityContext.enabled }}
        securityContext:
          runAsUser: {{ .Values.studio.securityContext.runAsUser }}
          runAsGroup: {{ .Values.studio.securityContext.runAsGroup }}
          allowPrivilegeEscalation: {{ .Values.studio.securityContext.allowPrivilegeEscalation }}
          privileged: {{ .Values.studio.securityContext.privileged }}
          capabilities:
            drop:
              - all
        {{- end }}
        env:
        - name: BASE_PATH
          value: "/app"
        - name: GET_HOSTS_FROM
          value: dns
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.postgres.secretName" . }}
              key: password
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.global.postgresql.auth.user }}
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ template "stackn.secretName" . }}
              key: rabbit-password
        - name: RABBITMQ_HOST
          value: {{ .Release.Name }}-rabbit
        - name: RABBITMQ_USER
          value: {{ include "stackn.rabbit.username" . }}
        - name: REDIS_HOST
          value: {{ .Release.Name }}-redis
        {{- if .Values.chartcontroller.addSecret }}
        - name: KUBECONFIG
          value: {{ .Values.studio.kubeconfig_file | quote }}
        {{- end }}
        - name: DJANGO_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: django-secret-key
        {{ if .Values.studio.emailService.enabled }}
        - name: GOOGLE_SERVICE_ACCOUNT_TYPE
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-type
        - name: GOOGLE_SERVICE_ACCOUNT_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-project-id
        - name: GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-private-key-id
        - name: GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-private-key
        - name: GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-client-email
        - name: GOOGLE_SERVICE_ACCOUNT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-client-id
        - name: GOOGLE_SERVICE_ACCOUNT_AUTH_URI
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-auth-uri
        - name: GOOGLE_SERVICE_ACCOUNT_TOKEN_URI
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-token-uri
        - name: GOOGLE_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-auth-provider-x509-cert-url
        - name: GOOGLE_SERVICE_ACCOUNT_CLIENT_X509_CERT_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-client-x509-cert-url
        - name: GOOGLE_SERVICE_ACCOUNT_UNIVERSE_DOMAIN
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: email-google-service-account-universe-domain
        {{- end }}
        - name: DJANGO_ADMIN_URL_PATH
          value: {{ .Values.studio.djangoAdminUrlPath }}
        image: {{ .Values.studio.image.repository }}
        imagePullPolicy: {{ .Values.studio.image.pullPolicy }}
        name: {{ .Release.Name }}-celery-worker
        resources:
          limits:
            cpu: {{ .Values.celeryWorkers.resources.limits.cpu }}
            memory: {{ .Values.celeryWorkers.resources.limits.memory }}
          requests:
            cpu: {{ .Values.celeryWorkers.resources.requests.cpu }}
            memory: {{ .Values.celeryWorkers.resources.requests.memory }}
        volumeMounts:
          {{- if .Values.chartcontroller.addSecret }}
          - name: config
            mountPath: {{ .Values.studio.kubeconfig_dir | quote }}
            readOnly: true
          {{- end }}
          - mountPath: /app/studio/settings.py
            subPath: settings.py
            name: {{ .Release.Name}}-settings-configmap
      restartPolicy: Always
      volumes:
      {{- if .Values.chartcontroller.addSecret }}
      - name: config
        secret:
          secretName: {{ .Release.Name }}-chart-controller-secret
      {{- end }}
      - name: {{ .Release.Name}}-settings-configmap
        configMap:
          name: {{ .Release.Name}}-settings-configmap
          items:
          - key: settings.py
            path: settings.py

status: {}
{{- end }}
