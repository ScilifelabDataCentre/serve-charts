{{- if (include "stackn.createSecret" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "common.names.fullname" . }}
  labels:
  {{- include "common.labels.standard" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  studio-superuser-password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.names.fullname" .) "key" "studio-superuser-password" "providedValues" (list "global.studio.superuserPassword" "studio.superuserPassword") "context" $) }}
  event-user-password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.names.fullname" .) "key" "event-user-password" "providedValues" (list "global.studio.eventuserPassword" "studio.eventuserPassword") "context" $) }}
  rabbit-password:  {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.names.fullname" .) "key" "rabbit-password" "providedValues" (list "rabbit.password") "context" $) }}
  django-secret-key:  {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.names.fullname" .) "key" "django-secret-key" "providedValues" (list "studio.djangoSecret") "length" 50 "strong" true "context" $) }}
  {{ if .Values.studio.emailService.enabled }}
  email-host-user: {{ .Values.studio.emailService.hostUser | b64enc }}
  email-host-password: {{ .Values.studio.emailService.hostPassword | b64enc }}
  #email-api-key: {{ .Values.studio.emailService.apiKey | b64enc }}
  {{ end }}
  github-api-token: {{ .Values.studio.githubApiToken | b64enc }}
  # PostgreSQL TLS secrets
  postgres-tls.crt: {{ .Values.postgresql.tls.cert | b64enc }}
  postgres-tls.key: {{ .Values.postgresql.tls.key | b64enc }}
  postgres-ca.crt: {{ .Values.postgresql.tls.ca | b64enc }}
{{- end -}}
