name: New Helm chart version

on:
  push:
    branches:
      - ss-1388-bug-fix
    paths:
      - "apps/**/Chart.yaml"

jobs:
  detect-changed-app:
    runs-on: ubuntu-latest
    outputs:
      changed_app: ${{ steps.find-app.outputs.changed_app }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: Find changed Chart.yaml
        id: find-app
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep "apps/.*Chart.yaml" || echo "")
          APP_NAME=$(echo "$CHANGED_FILES" | head -n 1 | sed -E 's|apps/([^/]+)/Chart.yaml|\1|')
          echo "changed_app=$APP_NAME" >> $GITHUB_OUTPUT
          echo "Found changed app: $APP_NAME"

  update-json:
    needs: detect-changed-app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: custom-app
            helm_name: custom-app
          - name: dash
            helm_name: dash-app
          - name: filemanager
            helm_name: filemanager
          - name: jupyter-lab
            helm_name: lab
          - name: rstudio
            helm_name: rstudio
          - name: shiny
            helm_name: shinyapp
          - name: shinyproxy
            helm_name: shinyproxy
          - name: tissuumaps
            helm_name: tissuumaps
  
    if: ${{ matrix.app.name == needs.detect-changed-app.outputs.changed_app }}

    steps:
      - name: Check out serve-charts repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TW_PAT }}

      - name: Set up environment variables
        run: |
          HELM_CHART=${{ matrix.app.helm_name }}
          CHART_PATH=apps/${{ matrix.app.name }}/Chart.yaml
          echo "HELM_CHART=$HELM_CHART" >> "$GITHUB_ENV"
          NEW_CHART_VERSION=$(yq e '.version' $CHART_PATH)
          echo "NEW_CHART_VERSION=$NEW_CHART_VERSION" >> $GITHUB_ENV
          echo "JSON_FILE_PATH=fixtures/apps_fixtures.json" >> $GITHUB_ENV

      - name: Set up the SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TW_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone the Serve repository
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "teamwhale@scilifelab.se"
          git clone git@github.com:ScilifelabDataCentre/serve.git

      - name: Import GPG key and configure commit signing
        run: |
          echo "${{ secrets.TW_GPG_PRIVATE_KEY }}" | gpg --batch --import
          git config --global user.signingkey "${{ secrets.GPG_KEY_ID }}"
          git config --global commit.gpgsign true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.TW_GPG_PRIVATE_KEY }}

      - name: Update JSON file in the Serve repository
        run: |
          cd serve
          jq -M --arg new_chart_version "$NEW_CHART_VERSION" 'map(if .fields.chart | contains("${{ env.HELM_CHART }}:") then .fields.chart |= sub(":[^:]+$"; ":" + $new_chart_version) else . end)' $JSON_FILE_PATH > tmp.json
          mv tmp.json $JSON_FILE_PATH
          git add $JSON_FILE_PATH
          git diff --quiet || git commit -S -m "Update chart version in ${{ env.HELM_CHART }} to ${{ env.NEW_CHART_VERSION }}"

      - name: Push changes to the Serve repository
        run: |
          cd serve
          git push origin HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.TW_PAT }}

      - name: Create a pull request in the Serve repository
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.TW_PAT }}
          commit-message: "Update apps_fixtures.json"
          committer: ${{ github.actor }} <teamwhale@scilifelab.se>
          author: ${{ github.actor }} <teamwhale@scilifelab.se>
          branch: update/${{ env.HELM_CHART }}-${{ env.NEW_CHART_VERSION }}
          title: '[Automated PR] Update chart version in ${{ env.HELM_CHART }} to ${{ env.NEW_CHART_VERSION }}'
          body: |
            This PR updates the `chart` field in `app_fixtures.json` to use the new version: `${{ env.NEW_CHART_VERSION }}`.
            Please review and merge if everything looks good.
          path: serve
