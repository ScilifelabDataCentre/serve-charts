apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: {{ .Release.Name }}-studio
    name: {{ .Release.Name }}-studio
  name: {{ .Release.Name }}-studio
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: {{ .Release.Name }}-studio
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: {{ .Release.Name }}-studio
        name: {{ .Release.Name }}-studio
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres
          command: ['sh', '-c', 'until pg_isready --host={{ .Release.Name }}-studio-db.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local --port=5432; do echo waiting for database; sleep 2; done;']
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
      containers:
      - args:
        - sh
        - scripts/run_web.sh
        env:
        - name: GET_HOSTS_FROM
          value: dns
        image: {{ .Values.studio.image.repository }}
        imagePullPolicy: Always
        name: {{ .Release.Name }}-studio
        volumeMounts:
          - mountPath: /app/studio/settings.py
            subPath: settings.py
            name: {{ .Release.Name}}-settings-configmap

          - mountPath: /app/projects/fixtures/fixtures.json
            subPath: fixtures.json
            name: {{ .Release.Name }}-fixtures-configmap
        resources:
          limits:
            cpu: {{ .Values.studio.resources.limits.cpu }}
            memory: {{ .Values.studio.resources.limits.memory }}
          requests:
            cpu: {{ .Values.studio.resources.requests.cpu }}
            memory: {{ .Values.studio.resources.requests.memory }}

    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: Always
      volumes:
      - name: {{ .Release.Name}}-settings-configmap
        configMap:
          name: {{ .Release.Name}}-settings-configmap
          items:
          - key: settings.py
            path: settings.py

      - name: {{ .Release.Name }}-fixtures-configmap
        configMap:
          name: {{ .Release.Name }}-fixtures-configmap
          items:
          - key: fixtures.json
            path: fixtures.json
