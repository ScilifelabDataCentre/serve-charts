apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-shinyproxy-configmap
  labels:
    {{- include "shinyproxy.labels" . | nindent 4 }}
data:
  application.yml: |
    management:
      server:
        port: 9091
    server:
      secure-cookies: true
    proxy:
      authentication: none
      container-backend: kubernetes
      heartbeat-rate: {{ .Values.appconfig.proxyheartbeatrate | default 10000 }}
      heartbeat-timeout: {{ .Values.appconfig.proxyheartbeattimeout | default 60000 }}
      container-wait-time: {{ .Values.appconfig.proxycontainerwaittime | default 30000 }}
      kubernetes:
        internal-networking: true
        namespace: {{ .Release.Namespace }}
        image-pull-policy: IfNotPresent
      hide-navbar: true
      landing-page: /app/{{ .Release.Name }}
      livenessProbe: {}
      logo-url: https://www.openanalytics.eu/shinyproxy/logo.png
      port: {{ .Values.appconfig.proxyport }}
      readinessProbe: {}
      same-site-cookie: None
      specs:
      - container-cmd:
        - /usr/bin/shiny-server
        container-cpu-limit: {{ .Values.flavor.limits.cpu }}
        container-cpu-request: {{ .Values.flavor.requests.cpu }}
        container-image: {{ .Values.appconfig.image }}
        container-memory-limit: {{ .Values.flavor.limits.memory }}
        container-memory-request: {{ .Values.flavor.requests.memory }}
        port: {{ .Values.appconfig.port }}
        id:  {{ .Release.Name }}
        display-name: {{ .Values.name | quote }}
        description: {{ .Values.app_description | quote }}
        minimum-seats-available: {{ .Values.appconfig.minimumSeatsAvailable }}
        seats-per-container: {{ .Values.appconfig.seatsPerContainer }}
        allow-container-re-use: {{ .Values.appconfig.allowContainerReuse }}
        labels:
          sp.instance: {{ .Release.Name }}
          allow-internet-egress: "true"
          shinyproxy-app: {{ .Release.Name }}
        kubernetes-pod-patches: |
          - op: add
            path: /spec/securityContext
            value:
              runAsUser: 999
              runAsGroup: 999
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              privileged: false
          - op: add
            path: /spec/volumes
            value:
            - name: {{ .Release.Name }}-shiny-configmap
              configMap:
                name: {{ .Release.Name }}-shiny-configmap
                items:
                - key: shiny-server.conf
                  path: shiny-server.conf
            {{- if .Values.apps.volumeK8s }}
            {{- range $key, $value := .Values.apps.volumeK8s }}
            - name: {{ $key }}
              persistentVolumeClaim:
                  claimName: {{ $value.release }}
            {{- end }}
            {{- end}}
          - op: add
            path: /spec/containers/0/volumeMounts
            value:
            - mountPath: /etc/shiny-server/shiny-server.conf
              subPath: shiny-server.conf
              name: {{ .Release.Name }}-shiny-configmap
            {{- if .Values.apps.volumeK8s }}
            {{- range $key, $value := .Values.apps.volumeK8s }}
            - mountPath: {{ $.Values.appconfig.path }}
              name: {{ $key }}
            {{- end }}
            {{- end}}
      title: Serve Shiny Proxy
