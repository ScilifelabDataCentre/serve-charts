apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      release: {{ $.Release.Name }}
      app: {{ .Values.appname }}
      project: {{ $.Values.project.slug }}
      type: app
      pod: {{ .Values.appname }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        # prometheus.io/port: "8501"
      labels:
        release: {{ $.Release.Name }}
        access: {{ .Values.permission }}
        app: {{ .Values.appname }}
        project: {{ $.Values.project.slug }}
        networking/allow-internet-egress: "true"
        networking/allow-egress-to-studio-web: "true"
        type: app
        pod: {{ .Values.appname }}
    spec:
    {{ if index .Values.flavor.limits "nvidia.com/gpu" }}
      affinity:
        {{ .Values.affinity | toYaml | nindent 8 | trim }}
    {{ end }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: vscode
        image: {{ .Values.appconfig.image }} #TODO add own image here when we have it -  2023-09-28, # done 2025-03-27
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]  # Override default entrypoint
        args:
          - "-l"               # Force login shell (sources /etc/profile, for enforcing umask 007 in custom_umask.sh)
          - "-c"               # Execute the command below,
          - "umask 007 && exec /usr/bin/code-server --auth=none --bind-addr=0.0.0.0:8080 /home/serve/"
        ports:
          - containerPort: {{ .Values.service.targetport }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        resources:
          {{- toYaml .Values.flavor | nindent 10 }}
        volumeMounts:
        {{- range $key, $value := .Values.apps.volumeK8s }}
        - name: {{ $key }}
          mountPath: /home/coder/{{ $key }}
        {{- end }}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      volumes:
      {{- range $key, $value := .Values.apps.volumeK8s }}
      - name: {{ $key }}
        persistentVolumeClaim:
          claimName: {{ $value.release }}
      {{- end }}
